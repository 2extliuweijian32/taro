name: Node CI
env:
  DEBUG: napi:*
  MACOSX_DEPLOYMENT_TARGET: '10.13'
on:
  push:
    branches:
      - main
      - feat/**
      - fix/**
  pull_request:
    branches:
      - main

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build-rust-binding:
    name: Build Rust Binding
    uses: ./.github/workflows/build-rust-binding.yml
  build:
    name: Testing on Node.js ${{ matrix.node-version }} (${{ matrix.os }})
    needs:
      - build-rust-binding
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x]
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
          - host: windows-latest
            target: x86_64-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Setup pnpm and install dependencies
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 7
          run_install: |-
              recursive: true
              args: [--frozen-lockfile]
      - name: Lint
        run: pnpm lint
      - name: Download artifact bindings-${{ matrix.settings.target }}
        uses: actions/download-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: crates/native_binding
      - name: Test bindings
        run: pnpm test:binding
        if: ${{ matrix.settings.target != 'x86_64-unknown-linux-gnu' }}
      - name: Test bindings with docker
        if: ${{ matrix.settings.target == 'x86_64-unknown-linux-gnu' }}
        # 暂时使用了一个第三方的 docker 镜像
        run: docker run --rm -v $(pwd):/build -w /build chf007/pnpm pnpm test:binding
      # 以下的测试流程应该在所有平台都执行，但 windows 好像还有些问题，因此目前只在 ubuntu-latest 执行
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        if: ${{ matrix.settings.host == 'ubuntu-latest' }}
        with:
          path: crates/native_binding/artifacts
      - name: List Package crates/native_binding
        run: ls -R ./crates/native_binding
        shell: bash
      - name: Move artifacts
        run: pnpm artifacts
        if: ${{ matrix.settings.host == 'ubuntu-latest' }}
      - name: build
        run: pnpm build
        if: ${{ matrix.settings.host == 'ubuntu-latest' }}
      - name: test
        run: pnpm test
        if: ${{ matrix.settings.host == 'ubuntu-latest' }}
        env:
          CI: true
